// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	customer "olshop/customer"

	mock "github.com/stretchr/testify/mock"
)

// CustomerInt is an autogenerated mock type for the CustomerInt type
type CustomerInt struct {
	mock.Mock
}

// ChangeProfile provides a mock function with given fields: profile, name, id
func (_m *CustomerInt) ChangeProfile(profile []byte, name string, id int) error {
	ret := _m.Called(profile, name, id)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, string, int) error); ok {
		r0 = rf(profile, name, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCustomerByID provides a mock function with given fields: id
func (_m *CustomerInt) GetCustomerByID(id int) (customer.Customer, error) {
	ret := _m.Called(id)

	var r0 customer.Customer
	if rf, ok := ret.Get(0).(func(int) customer.Customer); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(customer.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsEmailAvailable provides a mock function with given fields: email
func (_m *CustomerInt) IsEmailAvailable(email string) (bool, error) {
	ret := _m.Called(email)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoginCustomer provides a mock function with given fields: input
func (_m *CustomerInt) LoginCustomer(input customer.InputLogin) (customer.Customer, error) {
	ret := _m.Called(input)

	var r0 customer.Customer
	if rf, ok := ret.Get(0).(func(customer.InputLogin) customer.Customer); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Get(0).(customer.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(customer.InputLogin) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0
func (_m *CustomerInt) Register(_a0 customer.Customer) (customer.Customer, error) {
	ret := _m.Called(_a0)

	var r0 customer.Customer
	if rf, ok := ret.Get(0).(func(customer.Customer) customer.Customer); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(customer.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(customer.Customer) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCustomerPhone provides a mock function with given fields: phone, email
func (_m *CustomerInt) UpdateCustomerPhone(phone string, email string) error {
	ret := _m.Called(phone, email)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(phone, email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
