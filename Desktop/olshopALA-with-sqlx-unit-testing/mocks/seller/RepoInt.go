// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	seller "olshop/seller"

	mock "github.com/stretchr/testify/mock"
)

// RepoInt is an autogenerated mock type for the RepoInt type
type RepoInt struct {
	mock.Mock
}

// ChangePassword provides a mock function with given fields: newPassword, id
func (_m *RepoInt) ChangePassword(newPassword string, id int) error {
	ret := _m.Called(newPassword, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(newPassword, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateSeller provides a mock function with given fields: _a0
func (_m *RepoInt) CreateSeller(_a0 seller.Seller) (seller.Seller, error) {
	ret := _m.Called(_a0)

	var r0 seller.Seller
	if rf, ok := ret.Get(0).(func(seller.Seller) seller.Seller); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(seller.Seller)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(seller.Seller) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastID provides a mock function with given fields:
func (_m *RepoInt) GetLastID() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSellerByEmail provides a mock function with given fields: email
func (_m *RepoInt) GetSellerByEmail(email string) (seller.Seller, error) {
	ret := _m.Called(email)

	var r0 seller.Seller
	if rf, ok := ret.Get(0).(func(string) seller.Seller); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(seller.Seller)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
