// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	customer "olshop/customer"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// ChangeAvatar provides a mock function with given fields: avatarFile, id
func (_m *Repository) ChangeAvatar(avatarFile string, id int) error {
	ret := _m.Called(avatarFile, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(avatarFile, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ChangePassword provides a mock function with given fields: newPassword, id
func (_m *Repository) ChangePassword(newPassword string, id int) error {
	ret := _m.Called(newPassword, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(newPassword, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCustomerByEmail provides a mock function with given fields: email
func (_m *Repository) GetCustomerByEmail(email string) (customer.Customer, error) {
	ret := _m.Called(email)

	var r0 customer.Customer
	if rf, ok := ret.Get(0).(func(string) customer.Customer); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(customer.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomerByID provides a mock function with given fields: id
func (_m *Repository) GetCustomerByID(id int) (customer.Customer, error) {
	ret := _m.Called(id)

	var r0 customer.Customer
	if rf, ok := ret.Get(0).(func(int) customer.Customer); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(customer.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastID provides a mock function with given fields:
func (_m *Repository) GetLastID() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterUser provides a mock function with given fields: _a0
func (_m *Repository) RegisterUser(_a0 customer.Customer) (customer.Customer, error) {
	ret := _m.Called(_a0)

	var r0 customer.Customer
	if rf, ok := ret.Get(0).(func(customer.Customer) customer.Customer); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(customer.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(customer.Customer) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCustomerPhone provides a mock function with given fields: email, number
func (_m *Repository) UpdateCustomerPhone(email string, number string) error {
	ret := _m.Called(email, number)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(email, number)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
